services:
  nginx:
    image: ${DOCKER_REGISTRY}/nginx:latest
    hostname: nginx
    container_name: nginx
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_SSL_PORT}:443
    volumes:
      - ../logs/nginx:/var/log/nginx
      - ../conf/nginx/conf.d:/etc/nginx/conf.d
      - ../conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../conf/nginx/rewrite:/etc/nginx/rewrite
      - ../conf/nginx/components:/etc/nginx/components
      - ${WORKSPACES}:/data
    links:
      - php82:php82
    networks:
      dockenv:
        ipv4_address: ${IP_NGINX}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  php82:
    image: ${DOCKER_REGISTRY}/php:82
    hostname: php82
    container_name: php82
    restart: always
    expose:
      - 9000
    depends_on:
      - mysql57
      - redis
    ports:
      - ${PHP82_PORT}:9000
    volumes:
      - ../conf/php/82/php.ini:/etc/php82/php.ini
      - ../conf/php/82/php-fpm.d:/etc/php82/php-fpm.d
      - ../conf/php/82/php-fpm.conf:/etc/php82/php-fpm.conf
      - ../logs/php/82:/var/log/php82
      - ${WORKSPACES}:/data
    networks:
      dockenv:
        ipv4_address: ${IP_PHP82}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  mysql57:
    image: ${DOCKER_REGISTRY}/mysql:5.7
    hostname: mysql57
    container_name: mysql57
    restart: always
    expose:
      - 3306
    ports:
      - ${MYSQL57_PORT}:3306
    volumes:
      - ../data/mysql57:/var/lib/mysql
      - ../logs/mysql57:/var/log/mysql
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL57_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL57_DATABASE}
      - MYSQL_USER=${MYSQL57_USER}
      - MYSQL_PASSWORD=${MYSQL57_PASSWORD}
    # Bug, will killed, out of memory
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #only for container without host
    networks:
      dockenv:
        ipv4_address: ${IP_MYSQL57}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  redis:
    image: ${DOCKER_REGISTRY}/redis:latest
    container_name: redis
    hostname: redis
    # 默认 Redis 用户, 没权限写入挂载的 Volume
    user: root
    restart: always
    expose:
      - 6379
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ../conf/redis:/etc/redis
      - ../data/redis:/data
      - ../logs/redis:/var/log/redis
    # 数据持久化
    command: redis-server /etc/redis/redis.conf
    networks:
      dockenv:
        ipv4_address: ${IP_REDIS}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

networks:
  dockenv:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET_IP}
          ip_range: ${DOCKER_SUBNET_RANGE}
          gateway: ${DOCKER_SUBNET_GATEWAY}
