services:
  nginx:
    image: ${DOCKER_REGISTRY}/nginx:latest
    container_name: nginx
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_SSL_PORT}:443"
    volumes:
    - ./runtime/logs/nginx:/var/log/nginx
    # - ./runtime/conf/nginx:/etc/nginx
    # - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    links:
      # set php74 alias or direct to use mysql57 no alias set
      - php74:php74
      - php82:php82
    networks:
      dockenv:
        ipv4_address: ${IP_NGINX}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  php74:
    image: ${DOCKER_REGISTRY}/php:74
    container_name: php74
    restart: always
    depends_on:
      - mysql57
      - redis
      - memcached
    ports:
      - "${PHP74_PORT}:9000"
    volumes:
      - ./runtime/logs/php74:/var/log/php-fpm
    networks:
      - dockenv
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  php82:
    image: ${DOCKER_REGISTRY}/php:82
    container_name: php82
    restart: always
    depends_on:
      - mysql57
    ports:
      - "${PHP82_PORT}:9000"
    volumes:
      - ./runtime/logs/php82/:/var/log/php-fpm/
    networks:
      - dockenv
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  mysql57:
    image: ${DOCKER_REGISTRY}/mysql:5.7
    hostname: mysql57
    container_name: mysql57
    restart: always
    expose:
      - "3306"
    ports:
      - "${MYSQL57_PORT}:3306"
    volumes:
      - ./runtime/data/mysql57:/var/lib/mysql
      # - mysql57:/var/lib/mysql
      - ./runtime/logs/mysql57/:/var/log/mysql
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL57_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL57_DATABASE}
      - MYSQL_USER=${MYSQL57_USER}
      - MYSQL_PASSWORD=${MYSQL57_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #only for container without host
    networks:
      dockenv:
        ipv4_address: ${IP_MYSQL57}

  mysql80:
    image: ${DOCKER_REGISTRY}/mysql:8.0
    hostname: mysql80
    container_name: mysql80
    restart: always
    # Only for Container
    expose:
      - "3306"
    ports:
      - "${MYSQL80_PORT}:3306"
    volumes:
      - ./runtime/data/mysql57:/var/lib/mysql
      # - mysql80:/var/lib/mysql
      - ./runtime/logs/mysql80/:/var/log/mysql
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL80_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL80_DATABASE}
      - MYSQL_USER=${MYSQL80_USER}
      - MYSQL_PASSWORD=${MYSQL80_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #only for container without host
    networks:
      dockenv:
        ipv4_address: ${IP_MYSQL80}

  redis:
    image: ${DOCKER_REGISTRY}/redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./conf/redis:/etc/redis
      - ./runtime/data/redis:/data
      - ./runtime/logs/redis:/var/log/redis
    command: redis-server /etc/redis/redis.conf
    networks:
      dockenv:
        ipv4_address: ${IP_REDIS}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  memcached:
    image: ${DOCKER_REGISTRY}/memcached:latest
    hostname: memcached
    container_name: memcached
    ports:
      - ${MEMCACHED_PORT}:11211
    networks:
      dockenv:
        ipv4_address: ${IP_MEMCACHED}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  rabbitmq:
    image: ${DOCKER_REGISTRY}/rabbitmq:latest
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MQTT_PORT}:1883"
      - "${RABBITMQ_MQTT_WEB_PORT}:15692"
      - "${RABBITMQ_STOMP_PORT}:61613"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      TZ: "${TIMEZONE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST}"
      RABBITMQ_NODE_IP_ADDRESS: "${IP_RMQ}"
    volumes:
      - ./runtime/data/rabbitmq:/var/lib/rabbitmq
      - ./runtime/logs/rabbitmq:/var/log/rabbitmq
    networks:
      dockenv:
        ipv4_address: ${IP_RMQ}

  # https://www.meilisearch.com/docs/learn/configuration/instance_options
  # https://raw.githubusercontent.com/meilisearch/meilisearch/latest/config.toml
  meilisearch:
    image: ${DOCKER_REGISTRY}/meilisearch:latest
    hostname: meilisearch
    container_name: meilisearch
    volumes:
      - ./runtime/data/meilisearch:/data
    environment:
      # - MEILI_HTTP_ADDR=${IP_MEILISEARCH}:${MEILISEARCH_PORT}
      # - CONFIG_FILE_PATH=path/to/config.toml
      - MEILI_DB_PATH=/data/meilisearch
      # - MEILI_DUMP_DIR=dumps/
      - MEILI_MASTER_KEY=${DEFAULT_PASSWD}
      - MEILI_ENV=development # development OR production
      - MEILI_HTTP_PAYLOAD_SIZE_LIMIT=1073741824 # Gb Mb 1G
      - MEILI_MAX_INDEXING_MEMORY=1073741824 # Gb Mb 1G
      - MEILI_LOG_LEVEL=INFO # OFF, ERROR, WARN, INFO, DEBUG, TRACE
      - MEILI_SCHEDULE_SNAPSHOT=3600
      - MEILI_SNAPSHOT_DIR=/data/snapshot
    ports:
      - ${MEILISEARCH_PORT}:7700

networks:
  dockenv:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET_IP}
          ip_range: ${DOCKER_SUBNET_RANGE}
          gateway: ${DOCKER_SUBNET_GATEWAY}