services:
  nginx:
    image: ${DOCKER_REGISTRY}/nginx:latest
    hostname: nginx
    container_name: nginx
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_SSL_PORT}:443
    volumes:
    - ../logs/nginx:/var/log/nginx
    - ../conf/nginx/conf.d:/etc/nginx/conf.d
    - ../conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    - ../conf/nginx/rewrite:/etc/nginx/rewrite
    - ${WORKSPACES}:/data
    links:
      - php74:php74
      - php82:php82
    networks:
      dockenv:
        ipv4_address: ${IP_NGINX}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  php74:
    image: ${DOCKER_REGISTRY}/php:74
    hostname: php74
    container_name: php74
    restart: always
    expose:
      - 9000
    depends_on:
      - mongo
      - mysql57
      - mysql80
      - redis
      - memcached
    ports:
      - ${PHP74_PORT}:9000
    volumes:
      - ../logs/php74:/var/log/php74
      - ${WORKSPACES}:/data
    networks:
      - dockenv
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  php82:
    image: ${DOCKER_REGISTRY}/php:82
    hostname: php82
    container_name: php82
    restart: always
    expose:
      - 9000
    depends_on:
      - mongo
      - mysql57
      - mysql80
      - redis
      - memcached
    ports:
      - ${PHP82_PORT}:9000
    volumes:
      - ../conf/php82/php.ini:/etc/php82/php.ini
      - ../conf/php82/php-fpm.d:/etc/php82/php-fpm.d
      - ../conf/php82/php-fpm.conf:/etc/php82/php-fpm.conf
      - ../logs/php82:/var/log/php82
      - ${WORKSPACES}:/data
    networks:
      - dockenv
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  mysql57:
    image: ${DOCKER_REGISTRY}/mysql:5.7
    hostname: mysql57
    container_name: mysql57
    restart: always
    expose:
      - 3306
    ports:
      - ${MYSQL57_PORT}:3306
    volumes:
      - ../data/mysql57:/var/lib/mysql
      - ../logs/mysql57:/var/log/mysql
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL57_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL57_DATABASE}
      - MYSQL_USER=${MYSQL57_USER}
      - MYSQL_PASSWORD=${MYSQL57_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #only for container without host
    networks:
      dockenv:
        ipv4_address: ${IP_MYSQL57}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  mysql80:
    image: ${DOCKER_REGISTRY}/mysql:8.0
    hostname: mysql80
    container_name: mysql80
    restart: always
    expose:
      - 3306
    ports:
      - ${MYSQL80_PORT}:3306
    volumes:
      - ../data/mysql80:/var/lib/mysql
      - ../logs/mysql80:/var/log/mysql
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL80_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL80_DATABASE}
      - MYSQL_USER=${MYSQL80_USER}
      - MYSQL_PASSWORD=${MYSQL80_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #only for container without host
    networks:
      dockenv:
        ipv4_address: ${IP_MYSQL80}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  mongo:
    image: ${DOCKER_REGISTRY}/mongo:latest
    hostname: mongo
    container_name: mongo
    restart: always
    expose:
      - 27017
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ../data/mongo:/data/db
      - ../conf/mongo:/data/configdb
      - ../logs/mongo:/var/log/mongo
    environment:
      TZ: ${TIMEZONE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    # command: mongod --config /etc/mongod.conf
    networks:
      dockenv:
        ipv4_address: ${IP_MONGO}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  postgres:
    image: ${DOCKER_REGISTRY}/postgres:16
    hostname: postgres
    container_name: postgres
    restart: always
    expose:
      - 5432
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      dockenv:
        ipv4_address: ${IP_POSTGRES}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  redis:
    image: ${DOCKER_REGISTRY}/redis:latest
    container_name: redis
    hostname: redis
    # 默认 Redis 用户, 没权限写入挂载的 Volume
    user: root
    restart: always
    expose:
      - 6379
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ../conf/redis:/etc/redis
      - ../data/redis:/data
      - ../logs/redis:/var/log/redis
    # 数据持久化
    command: redis-server /etc/redis/redis.conf
    networks:
      dockenv:
        ipv4_address: ${IP_REDIS}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

  memcached:
    image: ${DOCKER_REGISTRY}/memcached:latest
    container_name: memcached
    hostname: memcached
    restart: always
    expose:
      - 11211
    ports:
      - ${MEMCACHED_PORT}:11211
    networks:
      dockenv:
        ipv4_address: ${IP_MEMCACHED}
    dns:
      - ${DOCKER_DNS1}
      - ${DOCKER_DNS2}

networks:
  dockenv:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET_IP}
          ip_range: ${DOCKER_SUBNET_RANGE}
          gateway: ${DOCKER_SUBNET_GATEWAY}